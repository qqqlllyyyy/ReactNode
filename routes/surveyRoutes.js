const mongoose = require("mongoose");
const reuqireLogin = require("../middlewares/requireLogin");
const requireCredits = require("../middlewares/requireCredits");
const Mailer = require("../services/Mailer");
const surveyTemplate = require("../services/emailTemplates/surveyTemplate");

// Access database
const Survey = mongoose.model("surveys");

module.exports = app => {
  // Custom page after voting
  app.get("/api/surveys/thanks", (req, res) => {
    res.send("Thanks for voting.");
  });

  // SendGrid notification
  app.post("/api/surveys/webhooks", (req, res) => {
    console.log(req.body);
    res.send({});
  });

  // Create a new survey
  // We can pass as many middlewares as we want
  // Make sure the user is logged in
  // Check the user have enough credits
  app.post("/api/surveys", reuqireLogin, requireCredits, async (req, res) => {
    // All the parameters for the POST request are in 'req.body'
    const { title, subject, body, recipients } = req.body;

    // Create an instance of the 'Survey' in memory (not saved yet)
    const survey = new Survey({
      title, // Equivalent to: title: title
      subject,
      body,
      recipients: recipients.split(",").map(email => ({ email: email.trim() })),
      _user: req.user.id, // ID generated by mongoose
      dateSent: Date.now()
    });

    // Send an email
    // Pass in survey data and the html template
    const mailer = new Mailer(survey, surveyTemplate(survey));

    try {
      await mailer.send();
      // Save the survey and the user
      await survey.save();
      req.user.credits -= 1;
      const user = await req.user.save();
      // Send back the updated user model, so we have the updated credits
      res.send(user);
    } catch (err) {
      // '422' means unprocessible entity
      res.status(422).send(err);
    }
  });
};
